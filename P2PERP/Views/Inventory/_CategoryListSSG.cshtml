@{
    Layout = "";
}

<!-- Overlay -->
<div id="overlayBlur" style="
    position: fixed;
    top: 0; left: 0; right: 0; bottom: 0;
    background: rgba(0,0,0,0.2);
    backdrop-filter: blur(5px);
    z-index: 1050;
    display: none;
"></div>

<style>
    .modal-backdrop {
        display: none;
    }
</style>

<div class="table-responsive card shadow p-3 bg-white rounded">
    <h4 class="text-primary text-center fw-bolder">Item Category List</h4>

    <div class="d-flex justify-content-end mb-3">
        <button id="btnAddCategory" class="btn btn-success btn-sm"><i class="bi bi-plus-lg"></i> Add Category</button>
    </div>

    <table id="categoryTable" class="table table-bordered table-striped text-center align-middle">
        <thead class="table-dark">
            <tr>
                <th><input type="checkbox" id="selectAllCategories" /></th>
                <th>Sr. No.</th>
                <th>Category</th>
                <th>Description</th>
                <th>HSN Code</th>
                <th>Action</th>
            </tr>
        </thead>
        <tbody></tbody>
    </table>

    <div class="modal fade" id="categoryModal" tabindex="-1" aria-hidden="true">
        <div class="modal-dialog modal-md">
            <div class="modal-content">
                <div id="categoryModalContent"></div>
            </div>
        </div>
    </div>
</div>

<script>
toastr.options = { closeButton:false, progressBar:true, preventDuplicates:true, newestOnTop:true, positionClass:"toast-top-right", timeOut:"2500" };

$(document).ready(function () {
    let selectedCategories = new Set();

    var table = $('#categoryTable').DataTable({
        ajax: { url: '@Url.Action("GetAllCategoriesSSG","Inventory")', type:'GET', dataSrc:'data' },
        responsive: true,
        columns:[
            { data:'ItemCategoryId', orderable:false, render: d => `<input type="checkbox" class="rowCheckbox" value="${d}" ${selectedCategories.has(d)?'checked':''}>` },
            { data:null, render:(data,type,row,meta)=> meta.row+1 },
            { data:'ItemCategoryName' },
            { data:'Description' },
            { data:'HSNCode' },
            { data:null, orderable:false, render:(data,type,row)=>`
                <div class="d-flex gap-1 justify-content-center">
                    <button class="btn btn-primary btn-sm btnEditCategory" data-id="${row.ItemCategoryId}"><i class="bi bi-pencil-square"></i></button>
                    <button class="btn btn-danger btn-sm btnDeleteCategory" data-id="${row.ItemCategoryId}" data-name="${row.ItemCategoryName}"><i class="bi bi-trash"></i></button>
                </div>` }
        ],
        dom: '<"d-flex justify-content-between mb-3"Bf>rt<"d-flex justify-content-between mt-3"ip>',
        buttons: [
            { extend: 'print', text: '<i class="bi bi-printer-fill fs-5"></i>' },
            { extend: 'pdfHtml5', text: '<i class="bi bi-file-earmark-pdf fs-5 text-danger"></i>', title: `Category List - ${moment().format("YYYY-MM-DD")}` },
            { extend: 'excelHtml5', text: '<i class="bi bi-file-earmark-excel fs-5 text-success"></i>', title: `Category List - ${moment().format("YYYY-MM-DD")}` },
            { extend: 'csvHtml5', text: '<i class="bi bi-filetype-csv fs-5 text-success"></i>', title: `Category_List_${moment().format("YYYY-MM-DD")}` }
        ],
        rowCallback:function(row,data){ $(row).find('.rowCheckbox').prop('checked', selectedCategories.has(data.ItemCategoryId)); }
    });

    // Select all checkbox
    $('#selectAllCategories').on('change', function(){
        const checked=$(this).is(':checked');
        table.rows().every(function(){
            let data=this.data();
            checked ? selectedCategories.add(data.ItemCategoryId) : selectedCategories.delete(data.ItemCategoryId);
        });
        $('.rowCheckbox').prop('checked', checked);
    });

    // Row checkbox
    $(document).on('change','.rowCheckbox',function(){
        const id=parseInt($(this).val());
        $(this).is(':checked') ? selectedCategories.add(id) : selectedCategories.delete(id);
        $('#selectAllCategories').prop('checked',$('.rowCheckbox').length===$('.rowCheckbox:checked').length);
    });

    // Add/Edit Modal
    $('#btnAddCategory').click(()=> openCategoryModal('@Url.Action("CreateCategorySSG","Inventory")'));
    $(document).on('click','.btnEditCategory',function(){ openCategoryModal('@Url.Action("CreateCategorySSG","Inventory")',{id: $(this).data('id')}); });

    function openCategoryModal(url,data=null){
        $('#categoryModalContent').html('<p class="text-center p-3">Loading...</p>');
        $.get(url,data).done(html=>{
            $('#categoryModalContent').html(html);
            new bootstrap.Modal(document.getElementById('categoryModal')).show();
        }).fail(()=> $('#categoryModalContent').html('<p class="text-danger p-3">Error loading modal</p>'));
    }

    // Delete Category with SweetAlert
    $(document).on('click', '.btnDeleteCategory', function () {
        var categoryId = $(this).data('id');
        var categoryName = $(this).data('name');
        var row = $(this).closest('tr');

        Swal.fire({
            title: "Are you sure?",
            text: `This will delete the category "${categoryName}"!`,
            icon: "warning",
            showCancelButton: true,
            confirmButtonColor: "#d33",
            cancelButtonColor: "#3085d6",
            confirmButtonText: "Yes, delete it!",
            cancelButtonText: "No, cancel"
        }).then((result) => {
            if (result.isConfirmed) {
                $.ajax({
                    url: '/Inventory/DeleteCategorySSG',
                    type: 'POST',
                    data: { ItemCategoryId: categoryId }, // <-- match parameter name exactly
                    success: function (res) {
                        if (res && res.success) {
                            row.remove();
                            $('#categoryTable').DataTable().ajax.reload(null, false);

                            Swal.fire({
                                icon: "success",
                                title: "Deleted!",
                                text: `Category "${categoryName}" has been deleted.`,
                                timer: 2000,
                                showConfirmButton: false
                            });
                        } else {
                            Swal.fire({ icon: "error", title: "Error!", text: res.message || "Could not delete the category." });
                        }
                    },
                    error: function (xhr, status, error) {
                        console.error("Delete error:", error);
                        Swal.fire({ icon: "error", title: "Oops...", text: "Something went wrong while deleting!" });
                    }
                });
            }
        });
    });

    // Overlay blur
    $(document).on('show.bs.modal','.modal',()=>$('#overlayBlur').fadeIn(200));
    $(document).on('hidden.bs.modal','.modal',()=>{ if($('.modal.show').length===0) $('#overlayBlur').fadeOut(200); });

    // Form submit validation
    $(document).on('submit','#categoryForm',function(e){
        e.preventDefault();
        let name=$('#txtCategoryName').val().trim(), hsn=$('#txtHSNCode').val().trim();
        if(!name || !hsn){
            Swal.fire({ icon:'warning', title:'Required fields missing!', text:'Please fill all required fields.', showConfirmButton:false, timer:1800, timerProgressBar:true });
            return;
        }
        $.post('@Url.Action("SaveCategory","Inventory")',$(this).serialize())
        .done(res=>{
            if(res.success){
                toastr.success(res.message);
                $('#categoryModal').modal('hide');
                table.ajax.reload(null,false);
            } else toastr.error(res.message);
        })
        .fail(xhr=> toastr.error('Server error: '+xhr.status));
    });
});
</script>
