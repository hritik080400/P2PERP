
<div class="d-flex justify-content-between mb-3 align-items-center">
    <h4 class="mb-0">Section List</h4>
    <button class="btn btn-success" id="btnAddSection">
        <i class="bi bi-plus-circle"></i> Add Section
    </button>
</div>

<!-- Responsive wrapper -->
<div class="table-responsive">
    <table id="sectionTable" class="table table-bordered table-hover align-middle w-100">
        <thead class="table-dark text-center">
            <tr>
                <th><input type="checkbox" id="selectAllSection">Select All</th>
                <th>Sr No</th>
                <th>Section ID</th>
                <th>Section Code</th>
                <th>Section Name</th>
                <th>Warehouse Code</th>
                <th>Warehouse Name</th>

                <th>Description</th>

                <th>Action</th>
            </tr>
        </thead>
        <tbody class="text-center"></tbody>
    </table>
</div>

<!-- Add Section Modal -->
<div class="modal fade" id="addSectionModal" tabindex="-1" aria-labelledby="addSectionModalLabel" aria-hidden="true">
    <div class="modal-dialog modal-lg">
        <div class="modal-content">
            <div class="modal-header bg-primary justify-content-center text-white">
                <h5 class="modal-title text-white" id="addSectionModalLabel">Add New Section</h5>
                <button type="button" class="btn-close btn-close-white" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body">
                <form id="addSectionForm">
                    <div class="row mb-3">
                        <div class="col-md-6">
                            <label class="form-label">Section Code</label>
                            <input type="text" id="SectionCodeSk" name="SectionCode" class="form-control" required readonly>
                        </div>
                        <div class="col-md-6">
                            <label class="form-label">Section Name</label>
                            <input type="text" name="SectionName" class="form-control" required>
                        </div>
                    </div>

                    <div class="row mb-3">
                        <div class="col-md-6">
                            <label class="form-label">Warehouse</label>
                            <select id="WarehouseCodes" name="WarehouseCode" class="form-select" required>
                                <option value="">-- Select Warehouse --</option>
                                <!-- Dynamically bind warehouses from DB -->
                            </select>
                        </div>
                        <div class="col-md-6">
                            <label class="form-label">Description</label>
                            <textarea name="Description" class="form-control"></textarea>
                        </div>
                    </div>

                    <div class="text-end">

                        <div class="d-flex justify-content-end gap-2 mt-4">
                            <button type="button" class="btn btn-outline-danger px-4" data-bs-dismiss="modal"><i class="bi bi-x-circle me-2"></i>Close</button>
                            <button type="submit"  class="btn btn-success px-4"><i class="bi bi-check-circle me-2 text-white"></i>Save</button>
                        </div>
                    </div>
                </form>
            </div>
        </div>
    </div>
</div>
<!-- Edit Section Modal -->
<div class="modal fade" id="editSectionModal" tabindex="-1" aria-labelledby="editSectionModalLabel" aria-hidden="true">
    <div class="modal-dialog modal-lg">
        <div class="modal-content">
            <div class="modal-header bg-primary text-white">
                <h5 class="modal-title text-white text-center" id="editSectionModalLabel">Edit Section</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body">
                <form id="editSectionForm">
                    <input type="hidden" name="SectionId" id="EditSectionId" />
                    <div class="row mb-3">
                        <div class="col-md-6">
                            <label class="form-label">Section Code</label>
                            <input type="text" id="EditSectionCode" name="SectionCode" class="form-control" readonly>
                        </div>
                        <div class="col-md-6">
                            <label class="form-label">Section Name</label>
                            <input type="text" id="EditSectionName" name="SectionName" class="form-control" required>
                        </div>
                    </div>

                    <div class="row mb-3">
                        <div class="col-md-6">
                            <label class="form-label">Warehouse</label>
                            <select id="EditWarehouseCode" name="WarehouseCode" class="form-select" required></select>
                        </div>
                        <div class="col-md-6">
                            <label class="form-label">Description</label>
                            <textarea id="EditDescription" name="Description" class="form-control"></textarea>
                        </div>
                    </div>

                    <div class="text-end">
                        <button type="submit" class="btn btn-success">
                            <i class="bi bi-save"></i> Update
                        </button>
                        <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Close</button>
                    </div>
                </form>
            </div>
        </div>
    </div>
</div>

<!-- View Section Modal -->
<div class="modal fade" id="viewSectionModal" tabindex="-1" aria-labelledby="viewSectionModalLabel" aria-hidden="true">
    <div class="modal-dialog modal-lg">
        <div class="modal-content">
            <div class="modal-header bg-primary text-white">
                <h5 class="modal-title text-white" id="viewSectionModalLabel">View Section</h5>
                <button type="button" class="btn-close btn-close-white" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body">
                <form id="viewSectionForm">
                    <div class="row mb-3">
                        <div class="col-md-6">
                            <label class="form-label">Section Code</label>
                            <input type="text" id="ViewSectionCode" class="form-control" readonly>
                        </div>
                        <div class="col-md-6">
                            <label class="form-label">Section Name</label>
                            <input type="text" id="ViewSectionName" class="form-control" readonly>
                        </div>
                    </div>

                    <div class="row mb-3">
                        <div class="col-md-6">
                            <label class="form-label">Warehouse</label>
                            <input type="text" id="ViewWarehouseName" class="form-control" readonly>
                        </div>
                        <div class="col-md-6">
                            <label class="form-label">Description</label>
                            <textarea id="ViewDescription" class="form-control" readonly></textarea>
                        </div>
                    </div>

                    <div class="text-end">
                        <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Close</button>
                    </div>
                </form>
            </div>
        </div>
    </div>
</div>


<script>
    toastr.options = { closeButton: true, progressBar: true, newestOnTop: true, positionClass: "toast-top-right", preventDuplicates: true, timeOut: 3000 };
    $(document).ready(function () {

        // Track selected sections
        let selectedSectionIds = new Set();

        var table = $("#sectionTable").DataTable({
            dom: '<"d-flex justify-content-between align-items-center mt-1 mb-2"Bf>rt<"d-flex justify-content-between mt-2"<"datatable-info"i><"datatable-pagination"p>>',
            buttons: [
                // --- Print ---
                {
                    extend: 'print',
                    text: '<i class="bi bi-printer-fill text-dark fs-5"></i>',
                    title: 'Section List',
                    exportOptions: {
                        columns: ':visible:not(:first-child):not(:last-child)',
                        rows: function (idx, data, node) {
                            return selectedSectionIds.has(data.SectionId);
                        }
                    },
                    action: function (e, dt, button, config) {
                        if (selectedSectionIds.size === 0) {
                            toastr.warning("Please select at least one section before printing.", "No Selection");
                            return;
                        }
                        $.fn.dataTable.ext.buttons.print.action.call(this, e, dt, button, config);
                    },
                    customize: function (win) {
                        $(win.document.body).find('table')
                            .css('border', '1px solid black')
                            .css('border-collapse', 'collapse')
                            .find('th, td')
                            .css('border', '1px solid black')
                            .css('padding', '5px');

                        $(win.document.body).find('th')
                            .css('background-color', 'black')
                            .css('color', 'white');
                    }
                },

                // --- PDF ---
                {
                    extend: 'pdfHtml5',
                    text: '<i class="bi bi-file-earmark-pdf text-danger fs-5"></i>',
                    title: 'Section List',
                    exportOptions: {
                        columns: ':visible:not(:first-child):not(:last-child)',
                        rows: function (idx, data, node) {
                            return selectedSectionIds.has(data.SectionId);
                        }
                    },
                    action: function (e, dt, button, config) {
                        if (selectedSectionIds.size === 0) {
                            toastr.warning("Please select at least one section before exporting PDF.", "No Selection");
                            return;
                        }
                        $.fn.dataTable.ext.buttons.pdfHtml5.action.call(this, e, dt, button, config);
                    },
                    customize: function (doc) {
                        doc.styles.tableHeader.fillColor = 'black';
                        doc.styles.tableHeader.color = 'white';
                        doc.styles.tableHeader.alignment = 'center';
                        doc.styles.tableHeader.bold = true;

                        var objLayout = {};
                        objLayout['hLineWidth'] = function (i) { return 0.5; };
                        objLayout['vLineWidth'] = function (i) { return 0.5; };
                        objLayout['hLineColor'] = function (i) { return '#000000'; };
                        objLayout['vLineColor'] = function (i) { return '#000000'; };
                        objLayout['paddingLeft'] = function (i) { return 5; };
                        objLayout['paddingRight'] = function (i) { return 5; };
                        doc.content[1].layout = objLayout;
                    }
                },

                // --- Excel ---
                {
                    extend: 'excelHtml5',
                    text: '<i class="bi bi-file-earmark-excel text-success fs-5"></i>',
                    title: 'Section List',
                    exportOptions: {
                        columns: ':visible:not(:first-child):not(:last-child)',
                        rows: function (idx, data, node) {
                            return selectedSectionIds.has(data.SectionId);
                        }
                    },
                    action: function (e, dt, button, config) {
                        if (selectedSectionIds.size === 0) {
                            toastr.warning("Please select at least one section before exporting Excel.", "No Selection");
                            return;
                        }
                        $.fn.dataTable.ext.buttons.excelHtml5.action.call(this, e, dt, button, config);
                    }
                },

                // --- CSV ---
                {
                    extend: 'csvHtml5',
                    text: '<i class="bi bi-filetype-csv text-success fs-5"></i>',
                    title: 'Section List',
                    exportOptions: {
                        columns: ':visible:not(:first-child):not(:last-child)',
                        rows: function (idx, data, node) {
                            return selectedSectionIds.has(data.SectionId);
                        }
                    },
                    action: function (e, dt, button, config) {
                        if (selectedSectionIds.size === 0) {
                            toastr.warning("Please select at least one section before exporting CSV.", "No Selection");
                            return;
                        }
                        $.fn.dataTable.ext.buttons.csvHtml5.action.call(this, e, dt, button, config);
                    }
                }
            ],

            "processing": true,
            "serverSide": false,
            "ajax": {
                "url": "@Url.Action("GetSectionsSK", "Inventory")",
                "type": "GET",
                "datatype": "json"
            },
            "columns": [
                {
                    "data": null,
                    "render": function (data, type, row) {
                        return `<input type="checkbox" class="section-checkbox" value="${row.SectionId}">`;
                    },
                    "orderable": false,
                    "searchable": false
                },
                {
                    "data": null,
                    "render": function (data, type, row, meta) {
                        return meta.row + 1; // Sr No
                    }
                },
                { "data": "SectionId", visible: false },
                { "data": "SectionCode" },
                { "data": "SectionName" },
                { "data": "WarehouseCode", visible: false },
                { "data": "WarehouseName" },
                {
                    "data": "Description", "render": function (data, type, row) {
                        if (type === "display" && data && data.length > 30) {
                            return `<span title="${data}">${data.substr(0, 30)}...</span>`;
                        }
                        return data;
                    } },
                {
                    "data": null,
                    "render": function (data, type, row) {
                        return `
                        <div class="d-flex justify-content-center gap-1">
                           <button class="btn btn-sm btn-info view-btn" data-id="${row.SectionId}" title="View">
            <i class="bi bi-eye"></i>
        </button>
        <button class="btn btn-sm btn-warning edit-btn" data-id="${row.SectionId}" title="Edit">
            <i class="bi bi-pencil-square"></i>
        </button>
        <button class="btn btn-sm btn-danger delete-btn" data-id="${row.SectionId}" title="Delete">
            <i class="bi bi-trash"></i>
        </button>
        </div>

                        `;
                    },
                    "orderable": false,
                    "searchable": false
                }
            ]
        });

        // --- Checkbox Selection Tracking ---
        $("#sectionTable").on("change", ".section-checkbox", function () {
            let id = $(this).val();
            if ($(this).prop("checked")) {
                selectedSectionIds.add(parseInt(id));
            } else {
                selectedSectionIds.delete(parseInt(id));
            }

            // Sync Select All with individual checkboxes
            let total = $(".section-checkbox").length;
            let checked = $(".section-checkbox:checked").length;

            if (total > 0 && total === checked) {
                $("#selectAllSection").prop("checked", true);
            } else {
                $("#selectAllSection").prop("checked", false);
            }
        });

        // --- Select All functionality ---
        $("#selectAllSection").on("change", function () {
            let isChecked = $(this).prop("checked");
            $(".section-checkbox").prop("checked", isChecked).trigger("change");
        });


        // --- Add Section ---
        $("#btnAddSection").on("click", function () {
            loadWarehouses();
            $("#addSectionModal").modal("show");
            // Get next Section code
            $.get("/Inventory/GetNextSectionCodeAsyncSK", function (res) {
                if (res.success && res.code) {
                    $("#SectionCodeSk").val(res.code);
                } else {
                    Swal.fire("Error", res.message || "Next Section Code not found!", "error");
                }
            });





        });

        // --- Save Section ---
        $("#addSectionForm").on("submit", function (e) {
            e.preventDefault();

            let formData = $(this).serialize();

            $.post("/Inventory/AddSection", formData, function (res) {
                if (res.success) {
                    $("#addSectionModal").modal("hide");
                    $("#addSectionForm")[0].reset();
                    $('#sectionTable').DataTable().ajax.reload(null, false);
                    toastr.success(res.message);

                } else {
                    Swal.fire("Error", res.message, "error");
                }
            }).fail(function () {
                Swal.fire("Error", "Error saving section!", "error");
            });
        });

        // --- Edit Section ---
        $("#sectionTable").on("click", ".edit-btn", function () {
            var id = $(this).data("id");

            $.get("/Inventory/GetSectionByIdSK", { id: id }, function (res) {
                if (res.success) {
                    $("#EditSectionId").val(res.data.SectionId);
                    $("#EditSectionCode").val(res.data.SectionCode);
                    $("#EditSectionName").val(res.data.SectionName);
                    $("#EditDescription").val(res.data.Description);

                    // Load warehouses and preselect
                    loadWarehousesForEdit(res.data.WarehouseCode);

                    $("#editSectionModal").modal("show");
                } else {
                    Swal.fire("Error", res.message, "error");
                }
            }).fail(function () {
                Swal.fire("Error", "Error loading section details.", "error");
            });
        });

        // --- Update Section Submit ---
        $("#editSectionForm").on("submit", function (e) {
            e.preventDefault();

            let formData = $(this).serialize();

            $.post("/Inventory/UpdateSectionSK", formData, function (res) {
                if (res.success) {
                    $("#editSectionModal").modal("hide");
                    $('#sectionTable').DataTable().ajax.reload(null, false);
                    toastr.success(res.message);

                } else {
                    Swal.fire("Error", res.message, "error");
                }
            }).fail(function () {
                Swal.fire("Error", "Error updating section!", "error");
            });
        });


        // --- View Section ---
        $("#sectionTable").on("click", ".view-btn", function () {
            var id = $(this).data("id");

            $.get("/Inventory/GetSectionByIdSK", { id: id }, function (res) {
                if (res.success) {
                    $("#ViewSectionCode").val(res.data.SectionCode);
                    $("#ViewSectionName").val(res.data.SectionName);
                    $("#ViewDescription").val(res.data.Description);
                    $("#ViewWarehouseName").val(res.data.WarehouseName);

                    $("#viewSectionModal").modal("show");
                } else {
                    Swal.fire("Error", res.message, "error");
                }
            }).fail(function () {
                Swal.fire("Error", "Error loading section details.", "error");
            });
        });



        // ✅ Load warehouses for Edit
        function loadWarehousesForEdit(selectedCode) {
            $.get("/Inventory/GetWarehousesListSK", function (data) {
                var ddl = $("#EditWarehouseCode");
                ddl.empty().append('<option value="">-- Select Warehouse --</option>');
                $.each(data, function (i, item) {
                    ddl.append(`<option value="${item.WarehouseCode}">${item.WarehouseName}</option>`);
                });
                ddl.val(selectedCode).trigger("change");
            }).fail(function () {
                Swal.fire("Error", "Error loading warehouses.", "error");
            });
        }



        // ✅ Load Warehouses
        function loadWarehouses(selectedCode = "") {
            $.get("/Inventory/GetWarehousesListSK", function (data) {
                var ddl = $("#WarehouseCodes");
                ddl.empty().append('<option value="">-- Select Warehouse --</option>');
                $.each(data, function (i, item) {
                    ddl.append(`<option value="${item.WarehouseCode}">${item.WarehouseName}</option>`);
                });
                if (selectedCode) ddl.val(selectedCode).trigger('change');
            }).fail(function () {
                Swal.fire("Error", "Error loading warehouses.", "error");
            });
        }

        // --- Edit Section ---
        $("#sectionTable").on("click", ".edit-btn", function () {
            var id = $(this).data("id");
            alert("Edit section with ID: " + id);
        });

        // --- Delete Section ---
        $("#sectionTable").on("click", ".delete-btn", function () {
            var sectionId = $(this).data("id");
            if (confirm("Are you sure you want to delete Section ID " + sectionId + "?")) {
                $.ajax({
                    url: "/Inventory/DeleteSectionSK",
                    type: "POST",
                    data: { sectionId: sectionId },   // <-- yaha bhejna hai
                    success: function (res) {
                        if (res.success) {
                            table.ajax.reload();
                            toastr.success(res.message);
                        } else {
                            toastr.error(res.message);
                        }
                    },
                    error: function () {
                        toastr.error("Error deleting section");
                    }
                });
            }
        });

    });
</script>


