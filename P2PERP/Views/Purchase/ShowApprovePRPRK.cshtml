@{
    ViewBag.Title = "ShowApprovePR";
}

<div class="main-content d-flex justify-content-center">
    <div class="shadow-sm rounded bg-white p-3" style="width:1200px;">
        <div class="main-content">

            <!-- Nav Pills -->
            <ul class="nav nav-pills mb-3">
                <li class="nav-item me-2">
                    <a href="/Purchase/ShowPendingPRPRK" class="nav-link">
                        <i class="bi bi-hourglass-split"></i> Pending Purchase Requisition
                    </a>
                </li>
                <li class="nav-item">
                    <a href="/Purchase/ShowApprovePRPRK" class="nav-link active">
                        <i class="bi bi-check2-circle"></i> Approved Purchase Requisition
                    </a>
                </li>
            </ul>

            <!-- Header -->
            <div class="text-center mb-3">
                <h2 class="text-primary fw-bold">Approved Purchase Requisition</h2>
            </div>

            <!-- Date Range Picker -->
            <div class="mb-3">
                <div class="input-group" style="max-width: 280px;">
                    <span class="input-group-text bg-primary text-white">
                        <i class="bi bi-calendar-date"></i>
                    </span>
                    <input type="text" id="PRdatepicker" class="form-control" placeholder="Select date range" readonly />
                </div>
            </div>

            <!-- Table -->
            <div class="table-responsive shadow-sm rounded">
                <table id="approvedPRTable" class="table table-striped table-hover table-bordered align-middle">
                    <thead class="table-dark">
                        <tr class="text-center">
                            <th><input type="checkbox" id="selectAll" data-bs-toggle="tooltip" title="Select All Rows" /></th>
                            <th>Sr No</th>
                            <th>PR Code</th>
                            <th>Added Date</th>
                            <th>Approved/Rejected Date</th>
                            <th>Status</th>
                            <th>Priority</th>
                            <th>Action</th>
                        </tr>
                    </thead>
                    <tbody class="text-center"></tbody>
                </table>
            </div>
        </div>
    </div>
</div>

<!-- Modal -->
<div class="modal fade" id="prModal" tabindex="-1">
    <div class="modal-dialog modal-xl modal-dialog-scrollable">
        <div class="modal-content">
            <div class="modal-header bg-primary text-white justify-content-center">
                <h5 class="modal-title fw-bold mb-0 text-white">Approved Purchase Requisition Items</h5>
                <button type="button" class="btn-close btn-close-white position-absolute end-0 me-3" data-bs-dismiss="modal"></button>
            </div>
            <div class="modal-body" id="prModalBody"></div>
        </div>
    </div>
</div>

<style>
    .modal-backdrop {
        display: none;
    }

    .container-fluid {
        max-width: 1200px !important;
        margin-left: auto;
        margin-right: auto;
    }

    body.modal-open .main-content {
        position: relative;
    }

        body.modal-open .main-content::after {
            content: '';
            position: fixed;
            inset: 0;
            background-color: rgba(0,0,0,0.5);
            z-index: 1040;
            pointer-events: none;
        }

    .modal {
        z-index: 1055 !important;
    }

    #approvedPRTable thead th {
        text-align: center !important;
        vertical-align: middle;
    }

    .btnAction {
        width: 35px;
        height: 35px;
        display: inline-flex;
        justify-content: center;
        align-items: center;
        padding: 0;
    }

    .dt-toolbar {
        display: flex;
        justify-content: space-between;
        align-items: center;
        flex-wrap: wrap;
        gap: 10px;
        margin-bottom: 10px;
    }

    .dt-left {
        display: flex;
        align-items: center;
        gap: 10px;
        flex-wrap: wrap;
    }

    .dataTables_paginate {
        float: right !important;
    }
</style>

<script>
    $(document).ready(function () {

        // ✅ Toastr-based toast wrapper
        function showToast(message, type = "info") {
            toastr.options = {
                "closeButton": true,
                "debug": false,
                "newestOnTop": false,
                "progressBar": true,
                "positionClass": "toast-top-right",
                "preventDuplicates": false,
                "onclick": null,
                "showDuration": "300",
                "hideDuration": "1000",
                "timeOut": "3000",
                "extendedTimeOut": "1000",
                "showEasing": "swing",
                "hideEasing": "linear",
                "showMethod": "fadeIn",
                "hideMethod": "fadeOut"
            };
            switch (type.toLowerCase()) {
                case "success": toastr.success(message); break;
                case "danger": toastr.error(message); break;
                case "warning": toastr.warning(message); break;
                default: toastr.info(message); break;
            }
        }

        let table;

        function exportColumns(idx) { return idx !== 0 && idx !== 7; }

        function loadApprovedPR() {
            table = $('#approvedPRTable').DataTable({
                dom: '<"dt-toolbar"<"dt-left"B><"dt-search"f>>rt<"bottom d-flex justify-content-between align-items-center"ip>',
                buttons: [
                    {
                        extend: 'print',
                        title: 'Approved Purchase Requisition',
                        text: '<i class="bi bi-printer-fill text-dark fs-5" data-bs-toggle="tooltip" title="Print Selected Rows"></i>',
                        action: function (e, dt, button, config) {
                            if ($('.row-select:checked').length === 0) { showToast("Please select at least one row to Print", "warning"); return; }
                            $.fn.dataTable.ext.buttons.print.action.call(this, e, dt, button, config);
                        },
                        exportOptions: { columns: exportColumns, rows: (idx, data, node) => $(node).find('.row-select').prop('checked') },
                        customize: function (win) {
                            $(win.document.body).prepend(`<div style="text-align:center; font-size:12px; margin-bottom:10px;">Generated on: ${new Date().toLocaleString()}</div>`);
                            $(win.document.body).find('table').addClass('table table-bordered table-striped').css('font-size', '14px');
                            $(win.document.body).find('thead').css({ 'background-color': '#0d6efd', 'color': 'white' });
                            $(win.document.body).find('table tbody tr').each(function (i) { $(this).find('td:first').text(i + 1); });
                        }
                    },
                    {
                        extend: 'pdfHtml5',
                        title: 'Approved Purchase Requisition',
                        text: '<i class="bi bi-file-earmark-pdf text-danger fs-5" data-bs-toggle="tooltip" title="Export to PDF"></i>',
                        action: function (e, dt, button, config) {
                            if ($('.row-select:checked').length === 0) { showToast("Please select at least one row to export PDF", "warning"); return; }
                            $.fn.dataTable.ext.buttons.pdfHtml5.action.call(this, e, dt, button, config);
                        },
                        exportOptions: { columns: exportColumns, rows: (idx, data, node) => $(node).find('.row-select').prop('checked') },
                        customize: function (doc) {
                            try {
                                doc.content[0].alignment = 'center'; doc.content[0].fontSize = 14;
                                doc.content.splice(1, 0, { text: 'Export Date: ' + new Date().toLocaleDateString('en-GB'), alignment: 'center', margin: [0, 0, 0, 8], fontSize: 10 });
                                const tableNode = doc.content.find(c => c.table); if (!tableNode) return;
                                doc.styles = doc.styles || {};
                                doc.styles.tableHeader = { alignment: 'center', fillColor: '#212529', color: '#fff', bold: true };
                                doc.styles.tableBodyEven = { alignment: 'center' };
                                doc.styles.tableBodyOdd = { alignment: 'center' };
                                tableNode.layout = { hLineWidth: () => 0.5, vLineWidth: () => 0.5, hLineColor: () => '#ddd', vLineColor: () => '#ddd', paddingLeft: () => 30, paddingRight: () => 6, paddingTop: () => 4, paddingBottom: () => 4 };
                                tableNode.table.body.forEach((row, i) => { if (i > 0) row[0] = { text: String(i), alignment: 'center' }; });
                            } catch (err) { console.error(err); }
                        }
                    },
                    {
                        extend: 'excelHtml5',
                        title: 'Approved Purchase Requisition',
                        text: '<i class="bi bi-file-earmark-excel text-success fs-5" data-bs-toggle="tooltip" title="Export to Excel"></i>',
                        action: function (e, dt, btn, config) {
                            if ($('.row-select:checked').length === 0) { showToast("Please select at least one row to export Excel", "warning"); return; }
                            window.__excelSrCounter = 0; $.fn.dataTable.ext.buttons.excelHtml5.action.call(this, e, dt, btn, config);
                        },
                        exportOptions: { columns: exportColumns, rows: (idx, data, node) => $(node).find('.row-select').prop('checked'), format: { body: (data, rowIdx, colIdx, node) => { if (colIdx === 1) return ++window.__excelSrCounter; if (typeof data === 'string') return data.replace(/<\/?[^>]+(>|$)/g, "").trim(); return data; } } }
                    },
                    {
                        extend: 'csvHtml5',
                        title: 'Approved_Purchase_Requisition',
                        text: '<i class="bi bi-filetype-csv text-primary fs-5" data-bs-toggle="tooltip" title="Export to CSV"></i>',
                        action: function (e, dt, btn, config) { if ($('.row-select:checked').length === 0) { showToast("Please select at least one row to export CSV", "warning"); return; } $.fn.dataTable.ext.buttons.csvHtml5.action.call(this, e, dt, btn, config); },
                        exportOptions: { columns: exportColumns, rows: (idx, data, node) => $(node).find('.row-select').prop('checked'), format: { body: (data, rowIdx, colIdx) => { if (colIdx === 0) return rowIdx + 1; if (typeof data === 'string') return data.replace(/<\/?[^>]+(>|$)/g, "").trim(); return data; } } }
                    }
                ],
                initComplete: function () { $('#approvedPRTable_filter input').addClass("form-control").attr("placeholder", "Search...").css("height", "40px"); },
                ajax: { url: '/Purchase/ShowApprovPRK', dataSrc: '' },
                columns: [
                    { data: null, orderable: false, className: 'text-center', render: (d, t, r) => `<input type="checkbox" class="row-select" value="${r.PRCode}" data-bs-toggle="tooltip" title="Select Row"/>` },
                    { data: null, orderable: false, className: 'text-center', render: (d, t, r, meta) => meta.row + 1 },
                    { data: 'PRCode' },
                    { data: 'AddedDateString', defaultContent: '' },
                    { data: 'ApprovedRejectedDateString', defaultContent: '' },
                    { data: 'StatusName', defaultContent: '' },
                    { data: 'Priority', defaultContent: '' },
                    { data: 'PRCode', orderable: false, className: 'text-center', render: d => `<button class="btn btn-sm btn-primary btnAction" data-id="${d}" data-bs-toggle="tooltip" title="View Details"><i class="bi bi-eye-fill"></i></button>` }
                ]
            });
        }

        loadApprovedPR();

        // ✅ Select All
        $(document).on("change", "#selectAll", function () { $(".row-select").prop("checked", this.checked); });
        $(document).on("change", ".row-select", function () { $("#selectAll").prop("checked", $(".row-select:checked").length === $(".row-select").length); });

        // ✅ Modal
        $(document).on("click", ".btnAction", function () {
            let prCode = $(this).data("id");
            $("#prModalBody").html("<div class='text-center p-3'>Loading...</div>");
            $.get("/Purchase/ShowApporvePRItemPRK", { prCode: prCode })
                .done(function (html) { $("#prModalBody").html(html); new bootstrap.Modal(document.getElementById("prModal")).show(); })
                .fail(function () { showToast("Error loading requisition items", "danger"); });
        });

        // ✅ Tooltips
        $('[data-bs-toggle="tooltip"]').tooltip();
        $('#approvedPRTable').on('draw.dt', function () { $('[data-bs-toggle="tooltip"]').tooltip(); });

        // ✅ Date Range Picker with Clear button
        $(document).on('focus', '#PRdatepicker', function () {
            if (!$(this).data('daterangepicker')) {
                $(this).daterangepicker({
                    autoUpdateInput: false,
                    opens: "center",
                    drops: "down",
                    alwaysShowCalendars: true,
                    locale: { cancelLabel: 'Clear', applyLabel: 'Apply' },
                    ranges: {
                        'Today': [moment(), moment()],
                        'Yesterday': [moment().subtract(1, 'days'), moment().subtract(1, 'days')],
                        'Last 7 Days': [moment().subtract(6, 'days'), moment()],
                        'Last 30 Days': [moment().subtract(29, 'days'), moment()],
                        'This Month': [moment().startOf('month'), moment().endOf('month')],
                        'Last Month': [moment().subtract(1, 'month').startOf('month'), moment().subtract(1, 'month').endOf('month')]
                    }
                }, function (start, end) {
                    $('#PRdatepicker').val(start.format('DD-MM-YYYY') + ' - ' + end.format('DD-MM-YYYY'));
                    $.fn.dataTable.ext.search.push(function (settings, data) {
                        if (settings.nTable.id !== 'approvedPRTable') return true;
                        const addedDate = moment(data[3], 'DD-MM-YYYY');
                        return addedDate.isBetween(start, end, undefined, '[]');
                    });
                    table.draw();
                    $.fn.dataTable.ext.search.pop();
                });
                $('#PRdatepicker').on('cancel.daterangepicker', function () { $(this).val(''); table.draw(); });
            }
        });

    });
</script>
